package App::KSP_CKAN::Roles::Validate;

use v5.010;
use strict;
use warnings;
use autodie;
use Method::Signatures 20140224;
use Capture::Tiny qw(capture);
use File::chdir;
use Moo::Role;

# ABSTRACT: Small validation role for consuming

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

  with('App::KSP_CKAN::Roles::Validate');

=head1 DESCRIPTION

Currently lightly wraps ckan_validate.py

=cut

requires '_http', 'config', '_mirror_files', 'warn';

after _mirror_files => sub {
  my $self = shift;

  # ckan-validate.py
  $self->_http->mirror( 
    url => $self->config->ckan_validate,
    path => $self->config->working."/ckan-validate.py",
    exe => 1,
  );

  # CKAN.schema
  $self->_http->mirror( 
    url => $self->config->ckan_schema,
    path => $self->config->working."/CKAN.schema",
    exe => 1,
  );
};

=method validate

  $self->validate( file => "/path/to/file.pl" );

Validates the CKAN file at the path. Returns the exit
code captured (anything not '0' is considered a failure).

=cut

method validate($file) {
  my ($stderr, $stdout, $exit) = capture { 
    local $CWD = $self->config->working;
    system("python", "ckan-validate.py", $file);
  };

  $self->warn($stdout) if $stdout;
  return $exit;
}

1;
